<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Slow Progress Blog</title><link>https://slowlang.github.io/blog/posts/</link><description>Recent content in Posts on Slow Progress Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 03 Feb 2023 15:02:19 +0400</lastBuildDate><atom:link href="https://slowlang.github.io/blog/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Introduction. Fibonacci compiled!</title><link>https://slowlang.github.io/blog/posts/01-introduction/</link><pubDate>Fri, 03 Feb 2023 15:02:19 +0400</pubDate><guid>https://slowlang.github.io/blog/posts/01-introduction/</guid><description>Hello reader!
I’m happy to see you here, and I hope you’ll find something for yourself here. This will be a series of posts about making a brand-new programming language and its compiler. I’ve been doing that for quite a while, so a few milestones have passed. But today, I want to share a new achievement.
Today I managed to compile a function call. And not even that, but the function is recursive.</description></item></channel></rss>